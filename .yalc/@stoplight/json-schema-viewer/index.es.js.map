{"version":3,"file":"index.es.js","sources":["../src/contexts/jsvOptions.tsx","../src/guards/isNonNullable.ts","../src/tree/utils.ts","../src/consts.ts","../src/components/shared/Caret.tsx","../src/components/shared/Description.tsx","../src/components/shared/Format.tsx","../src/utils/printName.ts","../src/components/shared/Types.tsx","../src/components/shared/Validations.tsx","../src/components/shared/ChildStack.tsx","../src/components/shared/Properties.tsx","../src/components/SchemaRow/useChoices.ts","../src/components/SchemaRow/SchemaRow.tsx","../src/components/SchemaRow/TopLevelSchemaRow.tsx","../src/components/JsonSchemaViewer.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { GoToRefHandler, RowAddonRenderer, ViewMode } from '../types';\n\nexport type JSVOptions = {\n  defaultExpandedDepth: number;\n  viewMode: ViewMode;\n  onGoToRef?: GoToRefHandler;\n  renderRowAddon?: RowAddonRenderer;\n  hideExamples?: boolean;\n};\n\nconst JSVOptionsContext = React.createContext<JSVOptions>({\n  defaultExpandedDepth: 0,\n  viewMode: 'standalone',\n  hideExamples: false,\n});\n\nexport const useJSVOptionsContext = () => React.useContext(JSVOptionsContext);\n\nexport const JSVOptionsContextProvider = JSVOptionsContext.Provider;\n","export function isNonNullable<T = unknown>(maybeNullable: T): maybeNullable is NonNullable<T> {\n  return maybeNullable !== void 0 && maybeNullable !== null;\n}\n","import {\n  isReferenceNode,\n  isRegularNode,\n  MirroredSchemaNode,\n  ReferenceNode,\n  RegularNode,\n  SchemaNode,\n  SchemaNodeKind,\n} from '@stoplight/json-schema-tree';\n\nimport { isNonNullable } from '../guards/isNonNullable';\nimport { ComplexArrayNode, FlattenableNode, PrimitiveArrayNode } from './types';\n\nexport type ChildNode = RegularNode | ReferenceNode | MirroredSchemaNode;\n\nexport const isNonEmptyParentNode = (\n  node: SchemaNode,\n): node is RegularNode & {\n  children: ChildNode[] & { 0: ChildNode };\n} => isRegularNode(node) && !!node.children && node.children.length > 0;\n\nexport function isFlattenableNode(node: SchemaNode): node is FlattenableNode {\n  if (!isRegularNode(node)) return false;\n\n  if (node.primaryType !== SchemaNodeKind.Array || !isNonNullable(node.children) || node.children.length === 0) {\n    return false;\n  }\n\n  return (\n    node.children.length === 1 &&\n    (isRegularNode(node.children[0]) || (isReferenceNode(node.children[0]) && node.children[0].error !== null))\n  );\n}\n\nexport function isPrimitiveArray(node: SchemaNode): node is PrimitiveArrayNode {\n  return isFlattenableNode(node) && isRegularNode(node.children[0]) && node.children[0].simple;\n}\n\nexport function isComplexArray(node: SchemaNode): node is ComplexArrayNode {\n  return isFlattenableNode(node) && isRegularNode(node.children[0]) && !node.children[0].simple;\n}\n\n/**\n * Returns the children of `node` that should be displayed in the tree.\n * Defaults to `node.children`, except for Arrays that get special handling (flattening).\n */\nexport function calculateChildrenToShow(node: SchemaNode): SchemaNode[] {\n  if (!isRegularNode(node) || isPrimitiveArray(node)) {\n    return [];\n  }\n  if (isComplexArray(node)) {\n    // flatten the tree here, and show the properties of the item type directly\n    return node.children[0].children ?? [];\n  }\n  return node.children ?? [];\n}\n\nexport function isPropertyRequired(schemaNode: SchemaNode): boolean {\n  const { parent } = schemaNode;\n  if (parent === null || !isRegularNode(parent) || schemaNode.subpath.length === 0) {\n    return false;\n  }\n\n  return !!parent.required?.includes(schemaNode.subpath[schemaNode.subpath.length - 1]);\n}\n","import { SchemaCombinerName } from '@stoplight/json-schema-tree';\nimport { Dictionary } from '@stoplight/types';\n\nexport const COMBINER_PRETTY_NAMES: Readonly<Dictionary<string, SchemaCombinerName>> = {\n  [SchemaCombinerName.AllOf]: 'and',\n  [SchemaCombinerName.AnyOf]: 'and/or',\n  [SchemaCombinerName.OneOf]: 'or',\n};\n\nexport const CARET_ICON_SIZE = 'xs';\nexport const CARET_ICON_BOX_DIMENSION = 12;\nexport const NESTING_OFFSET = 25;\nexport const CARET_OFFSET = NESTING_OFFSET;\n","import { faChevronDown, faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { Icon } from '@stoplight/mosaic';\nimport * as React from 'react';\n\nimport { CARET_ICON_BOX_DIMENSION, CARET_ICON_SIZE, CARET_OFFSET } from '../../consts';\n\nexport interface ICaret {\n  isExpanded: boolean;\n}\n\nconst caretStyle = {\n  height: CARET_ICON_BOX_DIMENSION,\n  marginTop: 2,\n  left: -CARET_OFFSET,\n};\n\nexport const Caret: React.FunctionComponent<ICaret> = ({ isExpanded }) => (\n  <div\n    className=\"sl-flex sl-absolute sl-justify-center sl-items-center sl-cursor-pointer sl-text-muted\"\n    style={caretStyle}\n    role=\"button\"\n  >\n    <Icon size={CARET_ICON_SIZE} icon={isExpanded ? faChevronDown : faChevronRight} />\n  </div>\n);\n","import { MarkdownViewer } from '@stoplight/markdown-viewer';\nimport { Box } from '@stoplight/mosaic';\nimport * as React from 'react';\n\nexport const Description: React.FunctionComponent<{ value: string }> = ({ value }) => (\n  <Box\n    as={MarkdownViewer}\n    markdown={value}\n    style={{\n      'font-size': 12,\n    }}\n  />\n);\n","import { isRegularNode, SchemaNode } from '@stoplight/json-schema-tree';\nimport * as React from 'react';\n\ntype FormatProps = {\n  schemaNode: SchemaNode;\n};\n\nexport const Format: React.FunctionComponent<FormatProps> = ({ schemaNode }) => {\n  if (!isRegularNode(schemaNode) || schemaNode.format === null) {\n    return null;\n  }\n\n  return <span className=\"sl-text-muted\">{`<${schemaNode.format}>`}</span>;\n};\n","import { isReferenceNode, isRegularNode, RegularNode, SchemaNodeKind } from '@stoplight/json-schema-tree';\n\nimport { isNonNullable } from '../guards/isNonNullable';\nimport { isComplexArray, isPrimitiveArray } from '../tree';\n\nexport function printName(schemaNode: RegularNode): string | null {\n  if (\n    schemaNode.primaryType !== SchemaNodeKind.Array ||\n    !isNonNullable(schemaNode.children) ||\n    schemaNode.children.length === 0\n  ) {\n    return schemaNode.title;\n  }\n\n  return printArrayName(schemaNode);\n}\n\nfunction printArrayName(schemaNode: RegularNode): string | null {\n  if (!isNonNullable(schemaNode.children) || schemaNode.children.length === 0) {\n    return schemaNode.title;\n  }\n\n  if (schemaNode.children.length === 1 && isReferenceNode(schemaNode.children[0])) {\n    return `$ref(${schemaNode.children[0].value})[]`;\n  }\n\n  if (isPrimitiveArray(schemaNode)) {\n    const val =\n      schemaNode.children?.reduce<SchemaNodeKind[] | null>((mergedTypes, child) => {\n        if (mergedTypes === null) return null;\n\n        if (!isRegularNode(child)) return null;\n\n        if (child.types !== null && child.types.length > 0) {\n          for (const type of child.types) {\n            if (mergedTypes.includes(type)) continue;\n            mergedTypes.push(type);\n          }\n        }\n\n        return mergedTypes;\n      }, []) ?? null;\n\n    return val !== null && val.length > 0 ? `array of ${val.join('s/')}s` : 'array';\n  }\n\n  if (isComplexArray(schemaNode)) {\n    const firstChild = schemaNode.children[0];\n    if (firstChild.title) {\n      return `array of ${firstChild.title}-s`;\n    } else if (firstChild.primaryType) {\n      return `array of ${firstChild.primaryType}s`;\n    } else if (firstChild.combiners?.length) {\n      return `array of ${firstChild.combiners.join('/')}`;\n    }\n    return 'array';\n  }\n\n  return null;\n}\n","import {\n  isReferenceNode,\n  isRegularNode,\n  RegularNode,\n  SchemaCombinerName,\n  SchemaNode,\n  SchemaNodeKind,\n} from '@stoplight/json-schema-tree';\nimport * as React from 'react';\n\nimport { printName } from '../../utils';\n\nfunction shouldRenderName(type: SchemaNodeKind | SchemaCombinerName | '$ref'): boolean {\n  return type === SchemaNodeKind.Array || type === SchemaNodeKind.Object || type === '$ref';\n}\n\nfunction getTypes(schemaNode: RegularNode): Array<SchemaNodeKind | SchemaCombinerName> {\n  return [schemaNode.types, schemaNode.combiners].reduce<Array<SchemaNodeKind | SchemaCombinerName>>(\n    (values, value) => {\n      if (value === null) {\n        return values;\n      }\n\n      values.push(...value);\n      return values;\n    },\n    [],\n  );\n}\n\nexport const Types: React.FunctionComponent<{ schemaNode: SchemaNode }> = ({ schemaNode }) => {\n  if (isReferenceNode(schemaNode)) {\n    return <span className=\"sl-truncate\">{schemaNode.value ?? '$ref'}</span>;\n  }\n\n  if (!isRegularNode(schemaNode)) {\n    return null;\n  }\n\n  const types = getTypes(schemaNode);\n\n  if (types.length === 0) return null;\n\n  const rendered = types.map((type, i, { length }) => (\n    <React.Fragment key={type}>\n      <span className=\"sl-truncate sl-text-muted\">{shouldRenderName(type) ? printName(schemaNode) ?? type : type}</span>\n      {i < length - 1 && (\n        <span key={`${i}-sep`} className=\"sl-text-muted\">\n          {' or '}\n        </span>\n      )}\n    </React.Fragment>\n  ));\n\n  return rendered.length > 1 ? <div className=\"sl-truncate\">{rendered}</div> : <>{rendered}</>;\n};\nTypes.displayName = 'JsonSchemaViewer.Types';\n","import { RegularNode } from '@stoplight/json-schema-tree';\nimport { Flex, Text } from '@stoplight/mosaic';\nimport { Dictionary } from '@stoplight/types';\nimport { capitalize, keys, omit, pick, pickBy, uniq } from 'lodash';\nimport * as React from 'react';\n\nexport interface IValidations {\n  validations: Dictionary<unknown>;\n  hideExamples?: boolean;\n}\n\ntype ValidationFormat = {\n  name: string;\n  values: string[];\n};\n\nexport const numberValidationNames = [\n  'minimum',\n  'maximum',\n  'minLength',\n  'maxLength',\n  'minItems',\n  'maxItems',\n  'exclusiveMinimum',\n  'exclusiveMaximum',\n];\n\nconst exampleValidationNames = ['examples'];\n\nconst excludedValidations = ['exclusiveMinimum', 'exclusiveMaximum', 'readOnly', 'writeOnly'];\n\nconst numberValidationFormatters: Record<string, (value: unknown) => string> = {\n  minimum: value => `>= ${value}`,\n  exclusiveMinimum: value => `> ${value}`,\n  minItems: value => `>= ${value} items`,\n  minLength: value => `>= ${value} characters`,\n  maximum: value => `<= ${value}`,\n  exclusiveMaximum: value => `< ${value}`,\n  maxItems: value => `<= ${value} items`,\n  maxLength: value => `<= ${value} characters`,\n};\n\nconst createStringFormatter = (nowrap: boolean | undefined) => (value: unknown) => {\n  return nowrap && typeof value === 'string' ? value : JSON.stringify(value);\n};\n\nconst createValidationsFormatter = (name: string, options?: { exact?: boolean; nowrap?: boolean }) => (\n  value: unknown[] | unknown,\n): ValidationFormat | null => {\n  const values = Array.isArray(value) ? value : [value];\n  if (values.length) {\n    return {\n      name: options?.exact ? name : values.length > 1 ? `${name} values` : `${name} value`,\n      values: values.map(createStringFormatter(options?.nowrap)),\n    };\n  }\n  return null;\n};\n\nconst validationFormatters: Record<string, (value: unknown) => ValidationFormat | null> = {\n  enum: createValidationsFormatter('Allowed'),\n  examples: createValidationsFormatter('Example'),\n  multipleOf: createValidationsFormatter('Multiple of', { exact: true }),\n  pattern: createValidationsFormatter('Match pattern', { exact: true, nowrap: true }),\n  default: createValidationsFormatter('Default'),\n};\n\nconst oasFormats = {\n  int32: {\n    minimum: 0 - 2 ** 31,\n    maximum: 2 ** 31 - 1,\n  },\n  int64: {\n    minimum: 0 - 2 ** 63,\n    maximum: 2 ** 63 - 1,\n  },\n  float: {\n    minimum: 0 - 2 ** 128,\n    maximum: 2 ** 128 - 1,\n  },\n  double: {\n    minimum: 0 - Number.MAX_VALUE,\n    maximum: Number.MAX_VALUE,\n  },\n  byte: {\n    pattern: '^[\\\\w\\\\d+\\\\/=]*$',\n  },\n};\n\nfunction filterOutOasFormatValidations(format: string, values: Dictionary<unknown>) {\n  if (!(format in oasFormats)) return values;\n\n  const newValues = { ...values };\n\n  for (const [key, value] of Object.entries(oasFormats[format])) {\n    if (value === newValues[key]) {\n      delete newValues[key];\n    }\n  }\n\n  return newValues;\n}\n\nexport const Validations: React.FunctionComponent<IValidations> = ({ validations, hideExamples }) => {\n  const numberValidations = pick(validations, numberValidationNames);\n  const booleanValidations = omit(\n    pickBy(validations, v => ['true', 'false'].includes(String(v))),\n    excludedValidations,\n  );\n  const keyValueValidations = omit(validations, [\n    ...keys(numberValidations),\n    ...keys(booleanValidations),\n    ...excludedValidations,\n    ...(hideExamples ? exampleValidationNames : []),\n  ]);\n\n  return (\n    <>\n      <NumberValidations validations={numberValidations} />\n      <KeyValueValidations validations={keyValueValidations} />\n      <NameValidations validations={booleanValidations} />\n    </>\n  );\n};\n\nconst NumberValidations = ({\n  validations,\n}: {\n  validations: Partial<Record<typeof numberValidationNames[number], unknown>>;\n}) => {\n  const entries = Object.entries(validations);\n  if (!entries.length) {\n    return null;\n  }\n  return (\n    <Flex my={2} color=\"muted\">\n      {entries\n        .map(([key, value]) => numberValidationFormatters[key](value))\n        .map((value, i) => (\n          <Value key={i} name={value} className=\"sl-mr-2\" />\n        ))}\n    </Flex>\n  );\n};\n\nconst KeyValueValidations = ({ validations }: { validations: Dictionary<unknown> }) => (\n  <>\n    {keys(validations)\n      .filter(key => Object.keys(validationFormatters).includes(key))\n      .map(key => {\n        const validation = validationFormatters[key](validations[key]);\n        if (validation) {\n          return <KeyValueValidation key={key} name={validation.name} values={validation.values} />;\n        } else {\n          return null;\n        }\n      })}\n  </>\n);\n\nconst KeyValueValidation = ({ name, values }: { name: string; values: string[] }) => {\n  return (\n    <Flex flexWrap color=\"muted\" my={2}>\n      <Text color=\"light\">{capitalize(name)}:</Text>\n      {uniq(values).map(value => (\n        <Value key={value} name={value} className=\"sl-ml-2\" />\n      ))}\n    </Flex>\n  );\n};\n\nconst NameValidations = ({ validations }: { validations: Dictionary<unknown> }) => (\n  <>\n    {keys(validations).length ? (\n      <Flex flexWrap my={2}>\n        {keys(validations)\n          .filter(key => validations[key])\n          .map(key => (\n            <Value key={key} name={key} className=\"sl-mr-2 sl-text-muted sl-capitalize\" />\n          ))}\n      </Flex>\n    ) : null}\n  </>\n);\n\nconst Value = ({ name, className }: { name: string; className?: string }) => (\n  <Text px={1} fontFamily=\"mono\" bg=\"canvas-100\" border rounded=\"lg\" className={className}>\n    {name}\n  </Text>\n);\n\nexport function validationCount(schemaNode: RegularNode) {\n  const validations = getValidationsFromSchema(schemaNode);\n  const validationKeys = keys(omit(validations, excludedValidations));\n  return uniq(validationKeys.map(key => ([...numberValidationNames].includes(key) ? 'number' : key))).length;\n}\n\nexport function getValidationsFromSchema(schemaNode: RegularNode) {\n  return {\n    ...(schemaNode.enum !== null ? { enum: schemaNode.enum } : null),\n    ...('annotations' in schemaNode\n      ? {\n          ...(schemaNode.annotations.default ? { default: schemaNode.annotations.default } : null),\n          ...(schemaNode.annotations.examples ? { examples: schemaNode.annotations.examples } : null),\n        }\n      : null),\n    ...getFilteredValidations(schemaNode),\n  };\n}\n\nfunction getFilteredValidations(schemaNode: RegularNode) {\n  if (schemaNode.format !== null) {\n    return filterOutOasFormatValidations(schemaNode.format, schemaNode.validations);\n  }\n\n  return schemaNode.validations;\n}\n","import { SchemaNode } from '@stoplight/json-schema-tree';\nimport { Box } from '@stoplight/mosaic';\nimport * as React from 'react';\n\nimport { NESTING_OFFSET } from '../../consts';\nimport { SchemaRow, SchemaRowProps } from '../SchemaRow';\n\nconst childStackStyle = { paddingLeft: NESTING_OFFSET };\n\ntype ChildStackProps = {\n  childNodes: readonly SchemaNode[];\n  currentNestingLevel: number;\n  className?: string;\n  RowComponent?: React.FC<SchemaRowProps>;\n};\nexport const ChildStack = ({\n  childNodes,\n  currentNestingLevel,\n  className,\n  RowComponent = SchemaRow,\n}: ChildStackProps) => (\n  <Box bg=\"canvas\" className={className} style={childStackStyle}>\n    {childNodes.map((childNode: SchemaNode, index) => (\n      <React.Fragment key={childNode.id}>\n        {index > 0 && <Box borderT borderColor=\"light\" alignSelf=\"stretch\" />}\n        <RowComponent schemaNode={childNode} nestingLevel={currentNestingLevel + 1} />\n      </React.Fragment>\n    ))}\n  </Box>\n);\n","import { Dictionary } from '@stoplight/types';\nimport * as React from 'react';\n\nimport { useJSVOptionsContext } from '../../contexts';\n\nexport interface IProperties {\n  required: boolean;\n  deprecated: boolean;\n  validations: Dictionary<unknown>;\n}\n\nexport const Properties: React.FunctionComponent<IProperties> = ({\n  required,\n  deprecated,\n  validations: { readOnly, writeOnly },\n}) => {\n  const { viewMode } = useJSVOptionsContext();\n\n  // Show readOnly writeOnly validations only in standalone mode and only if just one of them is present\n  const showVisibilityValidations = viewMode === 'standalone' && !!readOnly !== !!writeOnly;\n  const visibility = showVisibilityValidations ? (\n    readOnly ? (\n      <span className=\"sl-ml-2 sl-text-muted\">read-only</span>\n    ) : (\n      <span className=\"sl-ml-2 sl-text-muted\">write-only</span>\n    )\n  ) : null;\n\n  return (\n    <>\n      {deprecated ? <span className=\"sl-ml-2 sl-text-warning\">deprecated</span> : null}\n      {visibility}\n      {required && <span className=\"sl-ml-2 sl-text-warning\">required</span>}\n    </>\n  );\n};\n","import { extractPointerFromRef, pointerToPath } from '@stoplight/json';\nimport { isReferenceNode, isRegularNode, SchemaNode } from '@stoplight/json-schema-tree';\nimport { last } from 'lodash';\nimport * as React from 'react';\n\nimport { isComplexArray, isNonEmptyParentNode } from '../../tree';\nimport { printName } from '../../utils';\n\ntype Choice = {\n  title: string;\n  type: SchemaNode;\n};\n\nfunction calculateChoiceTitle(node: SchemaNode, isPlural: boolean): string {\n  const complexObjectSuffix = isPlural ? '-s' : '';\n  const primitiveSuffix = isPlural ? 's' : '';\n  if (isRegularNode(node)) {\n    const realName = printName(node);\n    if (realName) {\n      return realName + complexObjectSuffix;\n    }\n    return node.primaryType !== null ? node.primaryType + primitiveSuffix : 'any';\n  }\n  if (isReferenceNode(node)) {\n    if (node.value) {\n      const value = extractPointerFromRef(node.value);\n      const lastPiece = !node.error && value ? last(pointerToPath(value)) : null;\n      if (typeof lastPiece === 'string') {\n        return lastPiece.split('.')[0] + complexObjectSuffix;\n      }\n    }\n    return '$ref' + primitiveSuffix;\n  }\n\n  return 'any';\n}\n\nfunction makeChoice(node: SchemaNode, index: number): Choice {\n  return {\n    type: node,\n    title: `${index + 1}. ${calculateChoiceTitle(node, false)}`,\n  };\n}\n\nfunction makeArrayChoice(node: SchemaNode, index: number): Choice {\n  const itemTitle = calculateChoiceTitle(node, true);\n  const title = itemTitle !== 'any' ? `array of ${itemTitle}` : 'array';\n  return {\n    type: node,\n    title: `${index + 1}. ${title}`,\n  };\n}\n\n/**\n * Calculates type choices for a given node.\n *\n * Usually a node has one choice - only one possible type -, itself.\n * If a node is an oneOf or anyOf combiner, the possible types are the sub-types of the combiner.\n */\nexport const useChoices = (schemaNode: SchemaNode) => {\n  const choices: Choice[] = React.useMemo(() => {\n    // handle flattening of arrays that contain oneOfs, same logic as below\n    if (\n      isComplexArray(schemaNode) &&\n      isNonEmptyParentNode(schemaNode.children[0]) &&\n      shouldShowChildSelector(schemaNode.children[0])\n    ) {\n      return schemaNode.children[0].children.map(makeArrayChoice);\n    }\n\n    // if current node is a combiner, offer its children\n    if (isNonEmptyParentNode(schemaNode) && shouldShowChildSelector(schemaNode)) {\n      return schemaNode.children.map(makeChoice);\n    }\n    // regular node, single choice - itself\n    return [makeChoice(schemaNode, 0)];\n  }, [schemaNode]);\n\n  const defaultChoice = choices[0];\n\n  const [selectedChoice, setSelectedChoice] = React.useState<Choice | undefined>(defaultChoice);\n\n  React.useEffect(() => {\n    setSelectedChoice(defaultChoice);\n  }, [defaultChoice]);\n\n  const actualSelectedChoice = selectedChoice && choices.includes(selectedChoice) ? selectedChoice : defaultChoice;\n\n  return { selectedChoice: actualSelectedChoice, setSelectedChoice, choices };\n};\n\nconst shouldShowChildSelector = (schemaNode: SchemaNode) =>\n  isNonEmptyParentNode(schemaNode) && ['anyOf', 'oneOf'].includes(schemaNode.combiners?.[0] ?? '');\n","import { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\nimport {\n  isMirroredNode,\n  isReferenceNode,\n  isRegularNode,\n  ReferenceNode,\n  SchemaNode,\n  SchemaNodeKind,\n} from '@stoplight/json-schema-tree';\nimport { Icon, Select } from '@stoplight/mosaic';\nimport cn from 'classnames';\nimport { last } from 'lodash';\nimport * as React from 'react';\n\nimport { useJSVOptionsContext } from '../../contexts';\nimport { calculateChildrenToShow, isFlattenableNode, isPropertyRequired } from '../../tree';\nimport { Caret, Description, Format, getValidationsFromSchema, Types, Validations } from '../shared';\nimport { ChildStack } from '../shared/ChildStack';\nimport { Properties } from '../shared/Properties';\nimport { useChoices } from './useChoices';\n\nexport interface SchemaRowProps {\n  schemaNode: SchemaNode;\n  nestingLevel: number;\n}\n\nexport const SchemaRow: React.FunctionComponent<SchemaRowProps> = ({ schemaNode, nestingLevel }) => {\n  const description = isRegularNode(schemaNode) ? schemaNode.annotations.description : null;\n\n  const { defaultExpandedDepth, renderRowAddon, onGoToRef, hideExamples } = useJSVOptionsContext();\n\n  const [isExpanded, setExpanded] = React.useState<boolean>(\n    !isMirroredNode(schemaNode) && nestingLevel <= defaultExpandedDepth,\n  );\n\n  const { selectedChoice, setSelectedChoice, choices } = useChoices(schemaNode);\n  const typeToShow = selectedChoice.type;\n\n  const refNode = React.useMemo<ReferenceNode | null>(() => {\n    if (isReferenceNode(schemaNode)) {\n      return schemaNode;\n    }\n\n    if (\n      isRegularNode(schemaNode) &&\n      (isFlattenableNode(schemaNode) ||\n        (schemaNode.primaryType === SchemaNodeKind.Array && schemaNode.children?.length === 1))\n    ) {\n      return (schemaNode.children?.find(isReferenceNode) as ReferenceNode | undefined) ?? null;\n    }\n\n    return null;\n  }, [schemaNode]);\n\n  const isBrokenRef = typeof refNode?.error === 'string';\n\n  const childNodes = React.useMemo(() => calculateChildrenToShow(typeToShow), [typeToShow]);\n  return (\n    <div className=\"sl-relative\">\n      <div className=\"sl-flex\">\n        <div className=\"sl-min-w-0 sl-flex-grow\">\n          <div\n            onClick={childNodes.length > 0 ? () => setExpanded(!isExpanded) : undefined}\n            className={cn({ 'sl-cursor-pointer': childNodes.length > 0 })}\n          >\n            <div className=\"sl-flex sl-items-center sl-my-2\">\n              {childNodes.length > 0 ? <Caret isExpanded={isExpanded} /> : null}\n\n              <div className=\"sl-flex sl-items-baseline sl-text-base sl-flex-1\">\n                {schemaNode.subpath.length > 0 && shouldShowPropertyName(schemaNode) && (\n                  <div className=\"sl-mr-2 sl-font-mono sl-font-semibold\">{last(schemaNode.subpath)}</div>\n                )}\n\n                {choices.length === 1 && (\n                  <>\n                    <Types schemaNode={typeToShow} />\n                    <Format schemaNode={typeToShow} />\n                  </>\n                )}\n\n                {onGoToRef && isReferenceNode(schemaNode) && schemaNode.external ? (\n                  <a\n                    className=\"sl-ml-2 sl-cursor-pointer sl-text-primary-light\"\n                    onClick={(e: React.MouseEvent) => {\n                      e.preventDefault();\n                      e.stopPropagation();\n                      onGoToRef(schemaNode);\n                    }}\n                  >\n                    (go to ref)\n                  </a>\n                ) : null}\n\n                {schemaNode.subpath.length > 1 && schemaNode.subpath[0] === 'patternProperties' ? (\n                  <div className=\"sl-ml-2 sl-text-muted\">(pattern property)</div>\n                ) : null}\n                {choices.length > 1 && (\n                  <Select\n                    aria-label=\"Pick a type\"\n                    size=\"sm\"\n                    options={choices.map((choice, index) => ({\n                      value: String(index),\n                      label: choice.title,\n                    }))}\n                    value={\n                      String(choices.indexOf(selectedChoice))\n                      /* String to work around https://github.com/stoplightio/mosaic/issues/162 */\n                    }\n                    onChange={selectedIndex => setSelectedChoice(choices[selectedIndex as number])}\n                  />\n                )}\n              </div>\n              <Properties\n                required={isPropertyRequired(schemaNode)}\n                deprecated={isRegularNode(schemaNode) && schemaNode.deprecated}\n                validations={isRegularNode(schemaNode) ? schemaNode.validations : {}}\n              />\n            </div>\n\n            {typeof description === 'string' && description.length > 0 && (\n              <div className=\"sl-flex sl-flex-1 sl-my-2 sl-text-base\">\n                <Description value={description} />\n              </div>\n            )}\n          </div>\n\n          <Validations\n            validations={isRegularNode(schemaNode) ? getValidationsFromSchema(schemaNode) : {}}\n            hideExamples={hideExamples}\n          />\n\n          {isBrokenRef && (\n            // TODO (JJ): Add mosaic tooltip showing ref error\n            <Icon title={refNode!.error!} color=\"danger\" icon={faExclamationTriangle} size=\"sm\" />\n          )}\n        </div>\n        <div>{renderRowAddon ? renderRowAddon({ schemaNode, nestingLevel }) : null}</div>\n      </div>\n      {childNodes.length > 0 && isExpanded ? (\n        <ChildStack childNodes={childNodes} currentNestingLevel={nestingLevel} />\n      ) : null}\n    </div>\n  );\n};\n\nfunction shouldShowPropertyName(schemaNode: SchemaNode) {\n  return (\n    schemaNode.subpath.length === 2 &&\n    (schemaNode.subpath[0] === 'properties' || schemaNode.subpath[0] === 'patternProperties')\n  );\n}\n","import { faCaretDown } from '@fortawesome/free-solid-svg-icons';\nimport { isRegularNode, RegularNode } from '@stoplight/json-schema-tree';\nimport { Icon, Pressable, Select } from '@stoplight/mosaic';\nimport * as React from 'react';\n\nimport { NESTING_OFFSET } from '../../consts';\nimport { calculateChildrenToShow, isComplexArray } from '../../tree';\nimport { ChildStack } from '../shared/ChildStack';\nimport { SchemaRow, SchemaRowProps } from './SchemaRow';\nimport { useChoices } from './useChoices';\n\nexport const TopLevelSchemaRow: React.FC<SchemaRowProps> = ({ schemaNode, nestingLevel }) => {\n  const { selectedChoice, setSelectedChoice, choices } = useChoices(schemaNode);\n  const childNodes = React.useMemo(() => calculateChildrenToShow(selectedChoice.type), [selectedChoice.type]);\n\n  // regular objects are flattened at the top level\n  if (isRegularNode(schemaNode) && isPureObjectNode(schemaNode)) {\n    return (\n      <DecreaseIndentation>\n        <ChildStack childNodes={childNodes} currentNestingLevel={nestingLevel} />\n      </DecreaseIndentation>\n    );\n  }\n\n  if (isRegularNode(schemaNode) && choices.length > 1) {\n    return (\n      <DecreaseIndentation>\n        <div className=\"sl-relative\">\n          <Select\n            aria-label=\"Pick a type\"\n            size=\"sm\"\n            options={choices.map((choice, index) => ({\n              value: String(index),\n              label: choice.title,\n            }))}\n            value={\n              String(choices.indexOf(selectedChoice))\n              /* String to work around https://github.com/stoplightio/mosaic/issues/162 */\n            }\n            onChange={selectedIndex => setSelectedChoice(choices[selectedIndex as number])}\n            renderTrigger={props => (\n              <Pressable {...props}>\n                <div className=\"sl-mr-2 sl-font-mono sl-font-semibold sl-text-base sl-flex sl-cursor-pointer sl-py-2\">\n                  {selectedChoice.title}\n                  <div className=\"sl-ml-1\">\n                    <Icon icon={faCaretDown} />\n                  </div>\n                </div>\n              </Pressable>\n            )}\n          />\n\n          {childNodes.length > 0 ? <ChildStack childNodes={childNodes} currentNestingLevel={nestingLevel} /> : null}\n        </div>\n      </DecreaseIndentation>\n    );\n  }\n\n  if (isComplexArray(schemaNode) && isPureObjectNode(schemaNode.children[0])) {\n    return (\n      <DecreaseIndentation>\n        <div className=\"sl-relative\">\n          <div className=\"sl-mr-2 sl-font-mono sl-font-semibold sl-text-base sl-py-2\">array of:</div>\n          {childNodes.length > 0 ? <ChildStack childNodes={childNodes} currentNestingLevel={nestingLevel} /> : null}\n        </div>\n      </DecreaseIndentation>\n    );\n  }\n\n  return <SchemaRow schemaNode={schemaNode} nestingLevel={nestingLevel} />;\n};\n\nfunction isPureObjectNode(schemaNode: RegularNode) {\n  return schemaNode.primaryType === 'object' && schemaNode.types?.length === 1;\n}\n\nconst DecreaseIndentation: React.FC = ({ children }) => <div style={{ marginLeft: -NESTING_OFFSET }}>{children}</div>;\n","import { isRegularNode, SchemaTree as JsonSchemaTree, SchemaTreeRefDereferenceFn } from '@stoplight/json-schema-tree';\nimport { Box, Provider as MosaicProvider } from '@stoplight/mosaic';\nimport { ErrorBoundaryForwardedProps, FallbackProps, withErrorBoundary } from '@stoplight/react-error-boundary';\nimport cn from 'classnames';\nimport * as React from 'react';\n\nimport { JSVOptions, JSVOptionsContextProvider } from '../contexts';\nimport type { JSONSchema } from '../types';\nimport { TopLevelSchemaRow } from './SchemaRow';\nimport { ChildStack } from './shared/ChildStack';\n\nexport type JsonSchemaProps = Partial<JSVOptions> & {\n  schema: JSONSchema;\n  emptyText?: string;\n  className?: string;\n  resolveRef?: SchemaTreeRefDereferenceFn;\n};\n\nconst JsonSchemaViewerComponent: React.FC<JsonSchemaProps & ErrorBoundaryForwardedProps> = ({\n  schema,\n  viewMode = 'standalone',\n  className,\n  resolveRef,\n  emptyText = 'No schema defined',\n  defaultExpandedDepth = 2,\n  onGoToRef,\n  renderRowAddon,\n  hideExamples,\n}) => {\n  const jsonSchemaTreeRoot = React.useMemo(() => {\n    const jsonSchemaTree = new JsonSchemaTree(schema, {\n      mergeAllOf: true,\n      refResolver: resolveRef,\n    });\n    jsonSchemaTree.walker.hookInto('filter', node => {\n      if (!isRegularNode(node)) return true;\n\n      const { validations } = node;\n\n      if (!!validations.writeOnly === !!validations.readOnly) {\n        return true;\n      }\n\n      return !((viewMode === 'read' && !!validations.writeOnly) || (viewMode === 'write' && !!validations.readOnly));\n    });\n    jsonSchemaTree.populate();\n    return jsonSchemaTree.root;\n  }, [schema, resolveRef, viewMode]);\n\n  const isEmpty = React.useMemo(() => jsonSchemaTreeRoot.children.every(node => !isRegularNode(node) || node.unknown), [\n    jsonSchemaTreeRoot,\n  ]);\n\n  const options = React.useMemo(() => ({ defaultExpandedDepth, viewMode, onGoToRef, renderRowAddon, hideExamples }), [\n    defaultExpandedDepth,\n    viewMode,\n    onGoToRef,\n    renderRowAddon,\n    hideExamples,\n  ]);\n\n  if (isEmpty) {\n    return <Box className={cn(className, 'JsonSchemaViewer', 'sl-text-sm')}>{emptyText}</Box>;\n  }\n\n  return (\n    <MosaicProvider>\n      <JSVOptionsContextProvider value={options}>\n        <ChildStack\n          childNodes={jsonSchemaTreeRoot.children}\n          currentNestingLevel={-1}\n          className={cn(className, 'JsonSchemaViewer', 'sl-text-sm')}\n          RowComponent={TopLevelSchemaRow}\n        />\n      </JSVOptionsContextProvider>\n    </MosaicProvider>\n  );\n};\n\nconst JsonSchemaFallbackComponent: React.FC<FallbackProps> = ({ error }) => {\n  return (\n    <Box p={4}>\n      <b className=\"text-danger\">Error</b>\n      {error !== null ? `: ${error.message}` : null}\n    </Box>\n  );\n};\n\nexport const JsonSchemaViewer = withErrorBoundary<JsonSchemaProps>(JsonSchemaViewerComponent, {\n  FallbackComponent: JsonSchemaFallbackComponent,\n  recoverableProps: ['schema'],\n  reportErrors: false,\n});\n"],"names":["JSVOptionsContext","React.createContext","defaultExpandedDepth","viewMode","hideExamples","useJSVOptionsContext","React.useContext","JSVOptionsContextProvider","Provider","isNonNullable","maybeNullable","isNonEmptyParentNode","node","isRegularNode","children","length","isFlattenableNode","primaryType","SchemaNodeKind","Array","isReferenceNode","error","isPrimitiveArray","simple","isComplexArray","calculateChildrenToShow","isPropertyRequired","schemaNode","parent","subpath","required","includes","SchemaCombinerName","AllOf","AnyOf","OneOf","caretStyle","height","marginTop","left","Caret","isExpanded","React.createElement","className","style","role","Icon","size","icon","faChevronDown","faChevronRight","Description","value","Box","as","MarkdownViewer","markdown","font-size","Format","format","printName","title","val","reduce","mergedTypes","child","types","type","push","join","firstChild","combiners","printArrayName","Types","values","getTypes","rendered","map","i","React.Fragment","key","Object","shouldRenderName","displayName","numberValidationNames","exampleValidationNames","excludedValidations","numberValidationFormatters","minimum","exclusiveMinimum","minItems","minLength","maximum","exclusiveMaximum","maxItems","maxLength","createValidationsFormatter","name","options","isArray","exact","nowrap","JSON","stringify","validationFormatters","enum","examples","multipleOf","pattern","default","oasFormats","int32","int64","float","double","Number","MAX_VALUE","byte","Validations","validations","numberValidations","pick","booleanValidations","omit","pickBy","v","String","keyValueValidations","keys","NumberValidations","KeyValueValidations","NameValidations","entries","Flex","my","color","Value","filter","validation","KeyValueValidation","flexWrap","Text","capitalize","uniq","px","fontFamily","bg","border","rounded","getValidationsFromSchema","annotations","newValues","filterOutOasFormatValidations","getFilteredValidations","childStackStyle","paddingLeft","ChildStack","childNodes","currentNestingLevel","RowComponent","SchemaRow","childNode","index","id","borderT","borderColor","alignSelf","nestingLevel","Properties","deprecated","readOnly","writeOnly","visibility","calculateChoiceTitle","isPlural","complexObjectSuffix","primitiveSuffix","realName","extractPointerFromRef","lastPiece","last","pointerToPath","split","makeChoice","makeArrayChoice","itemTitle","useChoices","choices","React.useMemo","shouldShowChildSelector","defaultChoice","selectedChoice","setSelectedChoice","React.useState","React.useEffect","description","renderRowAddon","onGoToRef","setExpanded","isMirroredNode","typeToShow","refNode","find","isBrokenRef","onClick","undefined","cn","sl-cursor-pointer","shouldShowPropertyName","external","e","preventDefault","stopPropagation","Select","choice","label","indexOf","onChange","selectedIndex","faExclamationTriangle","TopLevelSchemaRow","isPureObjectNode","DecreaseIndentation","renderTrigger","props","Pressable","faCaretDown","marginLeft","JsonSchemaViewer","withErrorBoundary","schema","resolveRef","emptyText","jsonSchemaTreeRoot","jsonSchemaTree","JsonSchemaTree","mergeAllOf","refResolver","walker","hookInto","populate","root","isEmpty","every","unknown","MosaicProvider","FallbackComponent","p","message","recoverableProps","reportErrors"],"mappings":"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"}